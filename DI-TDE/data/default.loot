export int DeadBody = 1;
export int Wardrobe = 2;
export int Safe = 3;
export int ToolBox = 4;
export int Bag = 5;
export int CashDesk = 6;
export int MetalWardrobe = 7;
export int ToolboxWardrobe = 8;
export int Bonnet = 9;
export int Electronics = 10;
export int Trash = 11;
export int Seaweeds = 12;
export int Flowers = 13;
export int Refrigerator = 14;
export int ToolBoxFirearms = 15;
export int AmmoBox = 16;
export int Special = 17;
export int MagicBox = 18;
export int DeadBody_FatMan = 19;
export int DeadBody_Ram = 20;
export int DeadBody_Suicider = 21;
export int DeadBody_Corrupter = 22;
export int DeadBody_MeleeFighter = 23;
export int DeadBody_Infected = 24;
export int DeadBody_Human = 25;
export int DeadBody_Grenadier = 26;
export int DeadBody_Screamer = 27;
export int DeadBody_Wrestler = 28;

export int MedKit = 1;
export int Ammo = 2;
export int Cash = 3;
export int Weapon = 4;
export int CraftPart = 3;

export int LootType_None            = 0;
export int LootType_Knuckles        = 1;
export int LootType_Blunt           = 2;
export int LootType_Sharp           = 3;
export int LootType_Firearm_Short   = 4;
export int LootType_Firearm_Long    = 5;
export int LootType_Firearm_Auto    = 6;
export int LootType_Throwable       = 7;
export int LootType_Powerup         = 8;

export int Color_White =  0;
export int Color_Green =  1;
export int Color_Violet =  2;
export int Color_Yellow =  3;
export int Color_Orange =  4;

export int ColorSet_Default = 0;
export int ColorSet_LockPick1 = 1;
export int ColorSet_LockPick2 = 2;
export int ColorSet_LockPick3 = 3;
export int ColorSet_FatMan = 4;
export int ColorSet_Ram = 5;
export int ColorSet_Suicider = 6;
export int ColorSet_Corrupter = 7;
export int ColorSet_MeleeFighter = 8;

sub DefineColors()
{
    DefColorSet(ColorSet_Default)
    {
        ColorWeight(Color_White, 40.0);
        ColorWeight(Color_Green, 30.0);
        ColorWeight(Color_Violet, 20.0);
        ColorWeight(Color_Yellow, 10.0);
        ColorWeight(Color_Orange, 0.0);
    }
    
    DefColorSet(ColorSet_LockPick1)
    {
        ColorWeight(Color_White, 0.0);
        ColorWeight(Color_Green, 0.0);
        ColorWeight(Color_Violet, 33.5);
        ColorWeight(Color_Yellow, 33.5);
        ColorWeight(Color_Orange, 33.0);
    }
    
    DefColorSet(ColorSet_LockPick2)
    {
        ColorWeight(Color_White, 0.0);
        ColorWeight(Color_Green, 0.0);
        ColorWeight(Color_Violet, 17.0);
        ColorWeight(Color_Yellow, 17.0);
        ColorWeight(Color_Orange, 66.0);
    }
    
    DefColorSet(ColorSet_LockPick3)
    {
        ColorWeight(Color_White, 0.0);
        ColorWeight(Color_Green, 0.0);
        ColorWeight(Color_Violet, 0.0);
        ColorWeight(Color_Yellow, 0.0);
        ColorWeight(Color_Orange, 100.0);
    }

    DefColorSet(ColorSet_FatMan)
    {
        ColorWeight(Color_White, 25.0);
        ColorWeight(Color_Green, 25.0);
        ColorWeight(Color_Violet, 25.0);
        ColorWeight(Color_Yellow, 25.0);
        ColorWeight(Color_Orange, 0.0);
    }

    DefColorSet(ColorSet_Ram)
    {
        ColorWeight(Color_White, 0.0);
        ColorWeight(Color_Green, 40.0);
        ColorWeight(Color_Violet, 30.0);
        ColorWeight(Color_Yellow, 20.0);
        ColorWeight(Color_Orange, 10.0);
    }

    DefColorSet(ColorSet_Suicider)
    {
        ColorWeight(Color_White, 70.0);
        ColorWeight(Color_Green, 20.0);
        ColorWeight(Color_Violet, 5.0);
        ColorWeight(Color_Yellow, 5.0);
        ColorWeight(Color_Orange, 0.0);
    }

    DefColorSet(ColorSet_Corrupter)
    {
        ColorWeight(Color_White, 30.0);
        ColorWeight(Color_Green, 20.0);
        ColorWeight(Color_Violet, 40.0);
        ColorWeight(Color_Yellow, 10.0);
        ColorWeight(Color_Orange, 0.0);
    }

    DefColorSet(ColorSet_MeleeFighter)
    {
        ColorWeight(Color_White, 0.0);
        ColorWeight(Color_Green, 10.0);
        ColorWeight(Color_Violet, 30.0);
        ColorWeight(Color_Yellow, 50.0);
        ColorWeight(Color_Orange, 10.0);
    }
}

sub DefaultProgressProb(int loot_type = LootType_None)
{
    LootTypeProgress(loot_type)
    {
        Progress( 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0);
        Progress( 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0);
        Progress( 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0);
        Progress( 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0);
        Progress( 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0);
        Progress( 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0);
        Progress( 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0);
    }
}

sub ProgressLevelsProb()
{
    LootTypeProgress(LootType_Knuckles) {
        Progress( "Level 1", 5, 5, 4, 4, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0);
        Progress( "Level 2", 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 0, 0);
        Progress( "Level 3", 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1);
        Progress( "Level 4", 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4); }
    LootTypeProgress(LootType_Blunt) {
        Progress( "Level 1", 95, 90, 85, 84, 63, 20, 20, 10, 9, 4, 4, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0);
        Progress( "Level 2", 0, 5, 9, 10, 10, 35, 32, 10, 9, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 0, 0);
        Progress( "Level 3", 0, 0, 0, 5, 5, 10, 10, 22, 14, 4, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 0);
        Progress( "Level 4", 0, 0, 0, 0, 0, 5, 5, 10, 10, 15, 5, 4, 5, 5, 5, 2, 1, 1, 1, 1, 1);
        Progress( "Level 5", 0, 0, 0, 0, 0, 0, 0, 5, 5, 10, 10, 15, 15, 10, 10, 5, 1, 1, 1, 1, 1);
        Progress( "Level 6", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 6, 7, 8); }
    LootTypeProgress(LootType_Sharp) {
        Progress( "Level 1", 0, 0, 0, 5, 10, 10, 10, 10, 15, 10, 10, 5, 4, 4, 4, 4, 3, 4, 4, 1, 1);
        Progress( "Level 2", 0, 0, 0, 0, 0, 5, 5, 5, 10, 15, 20, 20, 14, 9, 9, 9, 4, 4, 4, 2, 1);
        Progress( "Level 3", 0, 0, 0, 0, 0, 0, 0, 5, 5, 10, 10, 10, 9, 14, 14, 14, 4, 4, 4, 4, 2);
        Progress( "Level 4", 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 10, 10, 14, 4, 4, 4, 2);
        Progress( "Level 5", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 14, 9, 9, 9);
        Progress( "Level 6", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 10, 10, 15, 10, 10);
        Progress( "Level 7", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 10, 15, 20); }
    LootTypeProgress(LootType_Firearm_Short) {
        Progress( "Level 3", 0, 0, 1, 0, 3, 5, 5, 5, 4, 4, 3, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0);
        Progress( "Level 4", 0, 0, 0, 0, 2, 4, 5, 5, 6, 6, 7, 7, 5, 2, 2, 1, 1, 1, 1, 0, 0);
        Progress( "Level 5", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 7, 7, 5, 1, 1, 1, 1, 0, 0);
        Progress( "Level 6", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 7, 4, 4, 1, 1, 1, 1);
        Progress( "Level 7", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 2, 4, 4); }
    LootTypeProgress(LootType_Firearm_Long) {
        Progress( "Level 4", 0, 0, 0, 0, 0, 1, 5, 5, 4, 5, 5, 5, 5, 7, 4, 3, 3, 3, 3, 2, 2);
        Progress( "Level 5", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 8, 6, 5, 5, 5, 5, 3, 3);
        Progress( "Level 6", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 7, 12, 7, 5, 3, 3);
        Progress( "Level 7", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 7, 7, 7); }
    LootTypeProgress(LootType_Firearm_Auto) {
        Progress( "Level 4", 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 5, 5, 5, 4, 4, 2, 2);
        Progress( "Level 5", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 3, 3);
        Progress( "Level 6", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 5);
        Progress( "Level 7", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 10); }
    LootTypeProgress(LootType_Throwable) {
        Progress( "Level 3", 0, 0, 0, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
        Progress( "Level 4", 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2);
        Progress( "Level 5", 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2);}

}

sub StandardMedKits(float weight = 1.0, float prob = 1.0)
{
    Set(MedKit, weight, prob)
    {
        Item("Medkit_HealthPackLarge", 1.0);
        Item("Medkit_HealthPackMedium", 2.0);
        Item("Medkit_HealthPackSmall", 5.0);
    }
}

sub StandardAmmo(float weight = 1.0, float prob = 1.0)
{
    Set(Ammo, weight, prob)
    {
        Item("Ammo_PistolSmall", 1.0);
        Item("Ammo_PistolBig", 1.0);
        Item("Ammo_ShotgunSmall", 1.0);
        Item("Ammo_ShotgunBig", 1.0);
        Item("Ammo_RifleSmall", 1.0);
        Item("Ammo_RifleBig", 1.0);
    }
}

sub StandardCash(float weight = 1.0, float prob = 1.0)
{
    Set(Cash, weight, prob)
    {
        ItemCount("Cash_Wallet", 5, 10, 20.0);
        ItemCount("Cash_Wallet", 80, 150, 1.0);
        ItemCount("Cash_Cash", 5, 30, 5.0);
    }
}

sub MediumCash(float weight = 1.0, float prob = 1.0)
{
    Set(Cash, weight, prob)
    {
        ItemCount("Cash_Cash", 80, 150, 1.0);
    }
}


sub BigCash(float weight = 1.0, float prob = 1.0)
{
    Set(Cash, weight, prob)
    {
        ItemCount("Cash_Cash", 200, 300, 1.0);
    }
}

sub default()
{
    use DefineColors();
    use ProgressLevelsProb();

    LootedObject(DeadBody, 0.2)
    {
        use StandardMedKits(weigh = 7.0, prob = 0.4);
        use StandardAmmo(weight = 7.0, prob = 0.9);
        use StandardCash(weight = 5.0, prob = 0.9);
    }

    LootedObject(Wardrobe, 0.5)
    {
        use StandardMedKits(weigh = 10.0, prob = 6.5);
        use StandardAmmo(weight = 8.0, prob = 0.9);
        use StandardCash(weight = 1.0, prob = 0.9);
    }

    LootedObject(Safe, 0.5)
    {
        use StandardMedKits(weigh = 2.0, prob = 1.7);
        use StandardAmmo(weight = 5.0, prob = 0.9);
        use StandardCash(weight = 10.0, prob = 0.9);
    }
    
    LootedObject(ToolBox, 0.5)
    {
        use StandardMedKits(weigh = 7.0, prob = 0.4);
        use StandardAmmo(weight = 7.0, prob = 0.9);
        use StandardCash(weight = 10.0, prob = 0.9);
    }

    LootedObject(Bag, 0.5)
    {
        use StandardMedKits(weigh = 7.0, prob = 0.5);
        use StandardAmmo(weight = 4.0, prob = 0.9);
        use StandardCash(weight = 10.0, prob = 0.9);
    }

    LootedObject(CashDesk, 0.5)
    {
        use BigCash(weight = 1.0, prob = 0.1);
    }
}
